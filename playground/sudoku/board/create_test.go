package board

import (
	. "go-sharpen-blade/playground/sudoku/cell"
	"testing"
)

func Test_create(t *testing.T) {
	type args struct {
		initialValues [CellCount]string
	}
	tests := []struct {
		name string
		args args
		want Board
	}{
		{
			name: "empty Board",
			args: args{[CellCount]string{}},
			want: Board{
				rows: CellPointersArray{
					{
						NewCell(0, 0, EmptyRuneValue),
						NewCell(0, 1, EmptyRuneValue),
						NewCell(0, 2, EmptyRuneValue),
						NewCell(0, 3, EmptyRuneValue),
						NewCell(0, 4, EmptyRuneValue),
						NewCell(0, 5, EmptyRuneValue),
						NewCell(0, 6, EmptyRuneValue),
						NewCell(0, 7, EmptyRuneValue),
						NewCell(0, 8, EmptyRuneValue)},
					{
						NewCell(1, 0, EmptyRuneValue),
						NewCell(1, 1, EmptyRuneValue),
						NewCell(1, 2, EmptyRuneValue),
						NewCell(1, 3, EmptyRuneValue),
						NewCell(1, 4, EmptyRuneValue),
						NewCell(1, 5, EmptyRuneValue),
						NewCell(1, 6, EmptyRuneValue),
						NewCell(1, 7, EmptyRuneValue),
						NewCell(1, 8, EmptyRuneValue)},
					{
						NewCell(2, 0, EmptyRuneValue),
						NewCell(2, 1, EmptyRuneValue),
						NewCell(2, 2, EmptyRuneValue),
						NewCell(2, 3, EmptyRuneValue),
						NewCell(2, 4, EmptyRuneValue),
						NewCell(2, 5, EmptyRuneValue),
						NewCell(2, 6, EmptyRuneValue),
						NewCell(2, 7, EmptyRuneValue),
						NewCell(2, 8, EmptyRuneValue)},
					{
						NewCell(3, 0, EmptyRuneValue),
						NewCell(3, 1, EmptyRuneValue),
						NewCell(3, 2, EmptyRuneValue),
						NewCell(3, 3, EmptyRuneValue),
						NewCell(3, 4, EmptyRuneValue),
						NewCell(3, 5, EmptyRuneValue),
						NewCell(3, 6, EmptyRuneValue),
						NewCell(3, 7, EmptyRuneValue),
						NewCell(3, 8, EmptyRuneValue)},
					{
						NewCell(4, 0, EmptyRuneValue),
						NewCell(4, 1, EmptyRuneValue),
						NewCell(4, 2, EmptyRuneValue),
						NewCell(4, 3, EmptyRuneValue),
						NewCell(4, 4, EmptyRuneValue),
						NewCell(4, 5, EmptyRuneValue),
						NewCell(4, 6, EmptyRuneValue),
						NewCell(4, 7, EmptyRuneValue),
						NewCell(4, 8, EmptyRuneValue)},
					{
						NewCell(5, 0, EmptyRuneValue),
						NewCell(5, 1, EmptyRuneValue),
						NewCell(5, 2, EmptyRuneValue),
						NewCell(5, 3, EmptyRuneValue),
						NewCell(5, 4, EmptyRuneValue),
						NewCell(5, 5, EmptyRuneValue),
						NewCell(5, 6, EmptyRuneValue),
						NewCell(5, 7, EmptyRuneValue),
						NewCell(5, 8, EmptyRuneValue)},
					{
						NewCell(6, 0, EmptyRuneValue),
						NewCell(6, 1, EmptyRuneValue),
						NewCell(6, 2, EmptyRuneValue),
						NewCell(6, 3, EmptyRuneValue),
						NewCell(6, 4, EmptyRuneValue),
						NewCell(6, 5, EmptyRuneValue),
						NewCell(6, 6, EmptyRuneValue),
						NewCell(6, 7, EmptyRuneValue),
						NewCell(6, 8, EmptyRuneValue)},
					{
						NewCell(7, 0, EmptyRuneValue),
						NewCell(7, 1, EmptyRuneValue),
						NewCell(7, 2, EmptyRuneValue),
						NewCell(7, 3, EmptyRuneValue),
						NewCell(7, 4, EmptyRuneValue),
						NewCell(7, 5, EmptyRuneValue),
						NewCell(7, 6, EmptyRuneValue),
						NewCell(7, 7, EmptyRuneValue),
						NewCell(7, 8, EmptyRuneValue)},
					{
						NewCell(8, 0, EmptyRuneValue),
						NewCell(8, 1, EmptyRuneValue),
						NewCell(8, 2, EmptyRuneValue),
						NewCell(8, 3, EmptyRuneValue),
						NewCell(8, 4, EmptyRuneValue),
						NewCell(8, 5, EmptyRuneValue),
						NewCell(8, 6, EmptyRuneValue),
						NewCell(8, 7, EmptyRuneValue),
						NewCell(8, 8, EmptyRuneValue),
					},
				},
				cols: CellPointersArray{
					{
						NewCell(0, 0, EmptyRuneValue),
						NewCell(1, 0, EmptyRuneValue),
						NewCell(2, 0, EmptyRuneValue),
						NewCell(3, 0, EmptyRuneValue),
						NewCell(4, 0, EmptyRuneValue),
						NewCell(5, 0, EmptyRuneValue),
						NewCell(6, 0, EmptyRuneValue),
						NewCell(7, 0, EmptyRuneValue),
						NewCell(8, 0, EmptyRuneValue)},
					{
						NewCell(0, 1, EmptyRuneValue),
						NewCell(1, 1, EmptyRuneValue),
						NewCell(2, 1, EmptyRuneValue),
						NewCell(3, 1, EmptyRuneValue),
						NewCell(4, 1, EmptyRuneValue),
						NewCell(5, 1, EmptyRuneValue),
						NewCell(6, 1, EmptyRuneValue),
						NewCell(7, 1, EmptyRuneValue),
						NewCell(8, 1, EmptyRuneValue)},
					{
						NewCell(0, 2, EmptyRuneValue),
						NewCell(1, 2, EmptyRuneValue),
						NewCell(2, 2, EmptyRuneValue),
						NewCell(3, 2, EmptyRuneValue),
						NewCell(4, 2, EmptyRuneValue),
						NewCell(5, 2, EmptyRuneValue),
						NewCell(6, 2, EmptyRuneValue),
						NewCell(7, 2, EmptyRuneValue),
						NewCell(8, 2, EmptyRuneValue)},
					{
						NewCell(0, 3, EmptyRuneValue),
						NewCell(1, 3, EmptyRuneValue),
						NewCell(2, 3, EmptyRuneValue),
						NewCell(3, 3, EmptyRuneValue),
						NewCell(4, 3, EmptyRuneValue),
						NewCell(5, 3, EmptyRuneValue),
						NewCell(6, 3, EmptyRuneValue),
						NewCell(7, 3, EmptyRuneValue),
						NewCell(8, 3, EmptyRuneValue)},
					{
						NewCell(0, 4, EmptyRuneValue),
						NewCell(1, 4, EmptyRuneValue),
						NewCell(2, 4, EmptyRuneValue),
						NewCell(3, 4, EmptyRuneValue),
						NewCell(4, 4, EmptyRuneValue),
						NewCell(5, 4, EmptyRuneValue),
						NewCell(6, 4, EmptyRuneValue),
						NewCell(7, 4, EmptyRuneValue),
						NewCell(8, 4, EmptyRuneValue)},
					{
						NewCell(0, 5, EmptyRuneValue),
						NewCell(1, 5, EmptyRuneValue),
						NewCell(2, 5, EmptyRuneValue),
						NewCell(3, 5, EmptyRuneValue),
						NewCell(4, 5, EmptyRuneValue),
						NewCell(5, 5, EmptyRuneValue),
						NewCell(6, 5, EmptyRuneValue),
						NewCell(7, 5, EmptyRuneValue),
						NewCell(8, 5, EmptyRuneValue)},
					{
						NewCell(0, 6, EmptyRuneValue),
						NewCell(1, 6, EmptyRuneValue),
						NewCell(2, 6, EmptyRuneValue),
						NewCell(3, 6, EmptyRuneValue),
						NewCell(4, 6, EmptyRuneValue),
						NewCell(5, 6, EmptyRuneValue),
						NewCell(6, 6, EmptyRuneValue),
						NewCell(7, 6, EmptyRuneValue),
						NewCell(8, 6, EmptyRuneValue)},
					{
						NewCell(0, 7, EmptyRuneValue),
						NewCell(1, 7, EmptyRuneValue),
						NewCell(2, 7, EmptyRuneValue),
						NewCell(3, 7, EmptyRuneValue),
						NewCell(4, 7, EmptyRuneValue),
						NewCell(5, 7, EmptyRuneValue),
						NewCell(6, 7, EmptyRuneValue),
						NewCell(7, 7, EmptyRuneValue),
						NewCell(8, 7, EmptyRuneValue)},
					{
						NewCell(0, 8, EmptyRuneValue),
						NewCell(1, 8, EmptyRuneValue),
						NewCell(2, 8, EmptyRuneValue),
						NewCell(3, 8, EmptyRuneValue),
						NewCell(4, 8, EmptyRuneValue),
						NewCell(5, 8, EmptyRuneValue),
						NewCell(6, 8, EmptyRuneValue),
						NewCell(7, 8, EmptyRuneValue),
						NewCell(8, 8, EmptyRuneValue),
					},
				},
				scts: CellPointersArray{
					{
						NewCell(0, 0, EmptyRuneValue),
						NewCell(0, 1, EmptyRuneValue),
						NewCell(0, 2, EmptyRuneValue),
						NewCell(1, 0, EmptyRuneValue),
						NewCell(1, 1, EmptyRuneValue),
						NewCell(1, 2, EmptyRuneValue),
						NewCell(2, 0, EmptyRuneValue),
						NewCell(2, 1, EmptyRuneValue),
						NewCell(2, 2, EmptyRuneValue)},
					{
						NewCell(0, 3, EmptyRuneValue),
						NewCell(0, 4, EmptyRuneValue),
						NewCell(0, 5, EmptyRuneValue),
						NewCell(1, 3, EmptyRuneValue),
						NewCell(1, 4, EmptyRuneValue),
						NewCell(1, 5, EmptyRuneValue),
						NewCell(2, 3, EmptyRuneValue),
						NewCell(2, 4, EmptyRuneValue),
						NewCell(2, 5, EmptyRuneValue)},
					{
						NewCell(0, 6, EmptyRuneValue),
						NewCell(0, 7, EmptyRuneValue),
						NewCell(0, 8, EmptyRuneValue),
						NewCell(1, 6, EmptyRuneValue),
						NewCell(1, 7, EmptyRuneValue),
						NewCell(1, 8, EmptyRuneValue),
						NewCell(2, 6, EmptyRuneValue),
						NewCell(2, 7, EmptyRuneValue),
						NewCell(2, 8, EmptyRuneValue)},
					{
						NewCell(3, 0, EmptyRuneValue),
						NewCell(3, 1, EmptyRuneValue),
						NewCell(3, 2, EmptyRuneValue),
						NewCell(4, 0, EmptyRuneValue),
						NewCell(4, 1, EmptyRuneValue),
						NewCell(4, 2, EmptyRuneValue),
						NewCell(5, 0, EmptyRuneValue),
						NewCell(5, 1, EmptyRuneValue),
						NewCell(5, 2, EmptyRuneValue)},
					{
						NewCell(3, 3, EmptyRuneValue),
						NewCell(3, 4, EmptyRuneValue),
						NewCell(3, 5, EmptyRuneValue),
						NewCell(4, 3, EmptyRuneValue),
						NewCell(4, 4, EmptyRuneValue),
						NewCell(4, 5, EmptyRuneValue),
						NewCell(5, 3, EmptyRuneValue),
						NewCell(5, 4, EmptyRuneValue),
						NewCell(5, 5, EmptyRuneValue)},
					{
						NewCell(3, 6, EmptyRuneValue),
						NewCell(3, 7, EmptyRuneValue),
						NewCell(3, 8, EmptyRuneValue),
						NewCell(4, 6, EmptyRuneValue),
						NewCell(4, 7, EmptyRuneValue),
						NewCell(4, 8, EmptyRuneValue),
						NewCell(5, 6, EmptyRuneValue),
						NewCell(5, 7, EmptyRuneValue),
						NewCell(5, 8, EmptyRuneValue)},
					{
						NewCell(6, 0, EmptyRuneValue),
						NewCell(6, 1, EmptyRuneValue),
						NewCell(6, 2, EmptyRuneValue),
						NewCell(7, 0, EmptyRuneValue),
						NewCell(7, 1, EmptyRuneValue),
						NewCell(7, 2, EmptyRuneValue),
						NewCell(8, 0, EmptyRuneValue),
						NewCell(8, 1, EmptyRuneValue),
						NewCell(8, 2, EmptyRuneValue)},
					{
						NewCell(6, 3, EmptyRuneValue),
						NewCell(6, 4, EmptyRuneValue),
						NewCell(6, 5, EmptyRuneValue),
						NewCell(7, 3, EmptyRuneValue),
						NewCell(7, 4, EmptyRuneValue),
						NewCell(7, 5, EmptyRuneValue),
						NewCell(8, 3, EmptyRuneValue),
						NewCell(8, 4, EmptyRuneValue),
						NewCell(8, 5, EmptyRuneValue)},
					{
						NewCell(6, 6, EmptyRuneValue),
						NewCell(6, 7, EmptyRuneValue),
						NewCell(6, 8, EmptyRuneValue),
						NewCell(7, 6, EmptyRuneValue),
						NewCell(7, 7, EmptyRuneValue),
						NewCell(7, 8, EmptyRuneValue),
						NewCell(8, 6, EmptyRuneValue),
						NewCell(8, 7, EmptyRuneValue),
						NewCell(8, 8, EmptyRuneValue),
					},
				},
			},
		}, {
			name: "three of each value",
			args: args{[CellCount]string{
				"1  2  3",
				"4  5  6",
				"7  8  9",
				" 1  2  3",
				" 4  5  6",
				" 7  8  9",
				"  1  2  3",
				"  4  5  6",
				"  7  8  9",
			}},
			want: Board{
				rows: CellPointersArray{
					{
						NewCell(0, 0, OneRuneValue),
						NewCell(0, 1, EmptyRuneValue),
						NewCell(0, 2, EmptyRuneValue),
						NewCell(0, 3, TwoRuneValue),
						NewCell(0, 4, EmptyRuneValue),
						NewCell(0, 5, EmptyRuneValue),
						NewCell(0, 6, ThreeRuneValue),
						NewCell(0, 7, EmptyRuneValue),
						NewCell(0, 8, EmptyRuneValue)},
					{
						NewCell(1, 0, FourRuneValue),
						NewCell(1, 1, EmptyRuneValue),
						NewCell(1, 2, EmptyRuneValue),
						NewCell(1, 3, FiveRuneValue),
						NewCell(1, 4, EmptyRuneValue),
						NewCell(1, 5, EmptyRuneValue),
						NewCell(1, 6, SixRuneValue),
						NewCell(1, 7, EmptyRuneValue),
						NewCell(1, 8, EmptyRuneValue)},
					{
						NewCell(2, 0, SevenRuneValue),
						NewCell(2, 1, EmptyRuneValue),
						NewCell(2, 2, EmptyRuneValue),
						NewCell(2, 3, EightRuneValue),
						NewCell(2, 4, EmptyRuneValue),
						NewCell(2, 5, EmptyRuneValue),
						NewCell(2, 6, NineRuneValue),
						NewCell(2, 7, EmptyRuneValue),
						NewCell(2, 8, EmptyRuneValue)},
					{
						NewCell(3, 0, EmptyRuneValue),
						NewCell(3, 1, OneRuneValue),
						NewCell(3, 2, EmptyRuneValue),
						NewCell(3, 3, EmptyRuneValue),
						NewCell(3, 4, TwoRuneValue),
						NewCell(3, 5, EmptyRuneValue),
						NewCell(3, 6, EmptyRuneValue),
						NewCell(3, 7, ThreeRuneValue),
						NewCell(3, 8, EmptyRuneValue)},
					{
						NewCell(4, 0, EmptyRuneValue),
						NewCell(4, 1, FourRuneValue),
						NewCell(4, 2, EmptyRuneValue),
						NewCell(4, 3, EmptyRuneValue),
						NewCell(4, 4, FiveRuneValue),
						NewCell(4, 5, EmptyRuneValue),
						NewCell(4, 6, EmptyRuneValue),
						NewCell(4, 7, SixRuneValue),
						NewCell(4, 8, EmptyRuneValue)},
					{
						NewCell(5, 0, EmptyRuneValue),
						NewCell(5, 1, SevenRuneValue),
						NewCell(5, 2, EmptyRuneValue),
						NewCell(5, 3, EmptyRuneValue),
						NewCell(5, 4, EightRuneValue),
						NewCell(5, 5, EmptyRuneValue),
						NewCell(5, 6, EmptyRuneValue),
						NewCell(5, 7, NineRuneValue),
						NewCell(5, 8, EmptyRuneValue)},
					{
						NewCell(6, 0, EmptyRuneValue),
						NewCell(6, 1, EmptyRuneValue),
						NewCell(6, 2, OneRuneValue),
						NewCell(6, 3, EmptyRuneValue),
						NewCell(6, 4, EmptyRuneValue),
						NewCell(6, 5, TwoRuneValue),
						NewCell(6, 6, EmptyRuneValue),
						NewCell(6, 7, EmptyRuneValue),
						NewCell(6, 8, ThreeRuneValue)},
					{
						NewCell(7, 0, EmptyRuneValue),
						NewCell(7, 1, EmptyRuneValue),
						NewCell(7, 2, FourRuneValue),
						NewCell(7, 3, EmptyRuneValue),
						NewCell(7, 4, EmptyRuneValue),
						NewCell(7, 5, FiveRuneValue),
						NewCell(7, 6, EmptyRuneValue),
						NewCell(7, 7, EmptyRuneValue),
						NewCell(7, 8, SixRuneValue)},
					{
						NewCell(8, 0, EmptyRuneValue),
						NewCell(8, 1, EmptyRuneValue),
						NewCell(8, 2, SevenRuneValue),
						NewCell(8, 3, EmptyRuneValue),
						NewCell(8, 4, EmptyRuneValue),
						NewCell(8, 5, EightRuneValue),
						NewCell(8, 6, EmptyRuneValue),
						NewCell(8, 7, EmptyRuneValue),
						NewCell(8, 8, NineRuneValue),
					},
				},
				cols: CellPointersArray{
					{
						NewCell(0, 0, OneRuneValue),
						NewCell(1, 0, FourRuneValue),
						NewCell(2, 0, SevenRuneValue),
						NewCell(3, 0, EmptyRuneValue),
						NewCell(4, 0, EmptyRuneValue),
						NewCell(5, 0, EmptyRuneValue),
						NewCell(6, 0, EmptyRuneValue),
						NewCell(7, 0, EmptyRuneValue),
						NewCell(8, 0, EmptyRuneValue)},
					{
						NewCell(0, 1, EmptyRuneValue),
						NewCell(1, 1, EmptyRuneValue),
						NewCell(2, 1, EmptyRuneValue),
						NewCell(3, 1, OneRuneValue),
						NewCell(4, 1, FourRuneValue),
						NewCell(5, 1, SevenRuneValue),
						NewCell(6, 1, EmptyRuneValue),
						NewCell(7, 1, EmptyRuneValue),
						NewCell(8, 1, EmptyRuneValue)},
					{
						NewCell(0, 2, EmptyRuneValue),
						NewCell(1, 2, EmptyRuneValue),
						NewCell(2, 2, EmptyRuneValue),
						NewCell(3, 2, EmptyRuneValue),
						NewCell(4, 2, EmptyRuneValue),
						NewCell(5, 2, EmptyRuneValue),
						NewCell(6, 2, OneRuneValue),
						NewCell(7, 2, FourRuneValue),
						NewCell(8, 2, SevenRuneValue)},
					{
						NewCell(0, 3, TwoRuneValue),
						NewCell(1, 3, FiveRuneValue),
						NewCell(2, 3, EightRuneValue),
						NewCell(3, 3, EmptyRuneValue),
						NewCell(4, 3, EmptyRuneValue),
						NewCell(5, 3, EmptyRuneValue),
						NewCell(6, 3, EmptyRuneValue),
						NewCell(7, 3, EmptyRuneValue),
						NewCell(8, 3, EmptyRuneValue)},
					{
						NewCell(0, 4, EmptyRuneValue),
						NewCell(1, 4, EmptyRuneValue),
						NewCell(2, 4, EmptyRuneValue),
						NewCell(3, 4, TwoRuneValue),
						NewCell(4, 4, FiveRuneValue),
						NewCell(5, 4, EightRuneValue),
						NewCell(6, 4, EmptyRuneValue),
						NewCell(7, 4, EmptyRuneValue),
						NewCell(8, 4, EmptyRuneValue)},
					{
						NewCell(0, 5, EmptyRuneValue),
						NewCell(1, 5, EmptyRuneValue),
						NewCell(2, 5, EmptyRuneValue),
						NewCell(3, 5, EmptyRuneValue),
						NewCell(4, 5, EmptyRuneValue),
						NewCell(5, 5, EmptyRuneValue),
						NewCell(6, 5, TwoRuneValue),
						NewCell(7, 5, FiveRuneValue),
						NewCell(8, 5, EightRuneValue)},
					{
						NewCell(0, 6, ThreeRuneValue),
						NewCell(1, 6, SixRuneValue),
						NewCell(2, 6, NineRuneValue),
						NewCell(3, 6, EmptyRuneValue),
						NewCell(4, 6, EmptyRuneValue),
						NewCell(5, 6, EmptyRuneValue),
						NewCell(6, 6, EmptyRuneValue),
						NewCell(7, 6, EmptyRuneValue),
						NewCell(8, 6, EmptyRuneValue)},
					{
						NewCell(0, 7, EmptyRuneValue),
						NewCell(1, 7, EmptyRuneValue),
						NewCell(2, 7, EmptyRuneValue),
						NewCell(3, 7, ThreeRuneValue),
						NewCell(4, 7, SixRuneValue),
						NewCell(5, 7, NineRuneValue),
						NewCell(6, 7, EmptyRuneValue),
						NewCell(7, 7, EmptyRuneValue),
						NewCell(8, 7, EmptyRuneValue)},
					{
						NewCell(0, 8, EmptyRuneValue),
						NewCell(1, 8, EmptyRuneValue),
						NewCell(2, 8, EmptyRuneValue),
						NewCell(3, 8, EmptyRuneValue),
						NewCell(4, 8, EmptyRuneValue),
						NewCell(5, 8, EmptyRuneValue),
						NewCell(6, 8, ThreeRuneValue),
						NewCell(7, 8, SixRuneValue),
						NewCell(8, 8, NineRuneValue),
					},
				},
				scts: CellPointersArray{
					{
						NewCell(0, 0, OneRuneValue),
						NewCell(0, 1, EmptyRuneValue),
						NewCell(0, 2, EmptyRuneValue),
						NewCell(1, 0, FourRuneValue),
						NewCell(1, 1, EmptyRuneValue),
						NewCell(1, 2, EmptyRuneValue),
						NewCell(2, 0, SevenRuneValue),
						NewCell(2, 1, EmptyRuneValue),
						NewCell(2, 2, EmptyRuneValue)},
					{
						NewCell(0, 3, TwoRuneValue),
						NewCell(0, 4, EmptyRuneValue),
						NewCell(0, 5, EmptyRuneValue),
						NewCell(1, 3, FiveRuneValue),
						NewCell(1, 4, EmptyRuneValue),
						NewCell(1, 5, EmptyRuneValue),
						NewCell(2, 3, EightRuneValue),
						NewCell(2, 4, EmptyRuneValue),
						NewCell(2, 5, EmptyRuneValue)},
					{
						NewCell(0, 6, ThreeRuneValue),
						NewCell(0, 7, EmptyRuneValue),
						NewCell(0, 8, EmptyRuneValue),
						NewCell(1, 6, SixRuneValue),
						NewCell(1, 7, EmptyRuneValue),
						NewCell(1, 8, EmptyRuneValue),
						NewCell(2, 6, NineRuneValue),
						NewCell(2, 7, EmptyRuneValue),
						NewCell(2, 8, EmptyRuneValue)},
					{
						NewCell(3, 0, EmptyRuneValue),
						NewCell(3, 1, OneRuneValue),
						NewCell(3, 2, EmptyRuneValue),
						NewCell(4, 0, EmptyRuneValue),
						NewCell(4, 1, FourRuneValue),
						NewCell(4, 2, EmptyRuneValue),
						NewCell(5, 0, EmptyRuneValue),
						NewCell(5, 1, SevenRuneValue),
						NewCell(5, 2, EmptyRuneValue)},
					{
						NewCell(3, 3, EmptyRuneValue),
						NewCell(3, 4, TwoRuneValue),
						NewCell(3, 5, EmptyRuneValue),
						NewCell(4, 3, EmptyRuneValue),
						NewCell(4, 4, FiveRuneValue),
						NewCell(4, 5, EmptyRuneValue),
						NewCell(5, 3, EmptyRuneValue),
						NewCell(5, 4, EightRuneValue),
						NewCell(5, 5, EmptyRuneValue)},
					{
						NewCell(3, 6, EmptyRuneValue),
						NewCell(3, 7, ThreeRuneValue),
						NewCell(3, 8, EmptyRuneValue),
						NewCell(4, 6, EmptyRuneValue),
						NewCell(4, 7, SixRuneValue),
						NewCell(4, 8, EmptyRuneValue),
						NewCell(5, 6, EmptyRuneValue),
						NewCell(5, 7, NineRuneValue),
						NewCell(5, 8, EmptyRuneValue)},
					{
						NewCell(6, 0, EmptyRuneValue),
						NewCell(6, 1, EmptyRuneValue),
						NewCell(6, 2, OneRuneValue),
						NewCell(7, 0, EmptyRuneValue),
						NewCell(7, 1, EmptyRuneValue),
						NewCell(7, 2, FourRuneValue),
						NewCell(8, 0, EmptyRuneValue),
						NewCell(8, 1, EmptyRuneValue),
						NewCell(8, 2, SevenRuneValue)},
					{
						NewCell(6, 3, EmptyRuneValue),
						NewCell(6, 4, EmptyRuneValue),
						NewCell(6, 5, TwoRuneValue),
						NewCell(7, 3, EmptyRuneValue),
						NewCell(7, 4, EmptyRuneValue),
						NewCell(7, 5, FiveRuneValue),
						NewCell(8, 3, EmptyRuneValue),
						NewCell(8, 4, EmptyRuneValue),
						NewCell(8, 5, EightRuneValue)},
					{
						NewCell(6, 6, EmptyRuneValue),
						NewCell(6, 7, EmptyRuneValue),
						NewCell(6, 8, ThreeRuneValue),
						NewCell(7, 6, EmptyRuneValue),
						NewCell(7, 7, EmptyRuneValue),
						NewCell(7, 8, SixRuneValue),
						NewCell(8, 6, EmptyRuneValue),
						NewCell(8, 7, EmptyRuneValue),
						NewCell(8, 8, NineRuneValue),
					},
				},
			},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := create(tt.args.initialValues)
			if err != nil {
				t.Errorf("create() error = %v", err)
			} else if !got.equals(&tt.want) {
				t.Errorf("create() = %v, want %v", got, tt.want)
			}
		})
	}
}
